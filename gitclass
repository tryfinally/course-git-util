#!/bin/bash
bold=$(tput bold)
normal=$(tput sgr0)
url=$COURSE_GIT_URL

action='pull'
depth=100000
ellapsed=5

while getopts ":hpc:it:" opt; do
  case ${opt} in
  	h ) echo "Usage: $0 [-h] [-c depth] [-t time] [user1] [user2] ..."
		echo "	$0						Pull all repos"
		echo "  $0 user1 user2 ...		Pull repos for user1 user2"		
		echo "	Options"		
		echo "  	-c [depth]         	Clone instead of pull with depth {default:all}"
		echo "  	-t n 				Wait n seconds between repos pull"
		echo "  	-h                 	This message"
		exit 0
		;;
    p ) action="pull"
    	;;
    c ) action="clone"
		if [ $OPTARG != "" ]; then
			depth=$OPTARG
		fi
		;;
	t ) if [ $OPTARG != "" ]; then
			ellapsed=$OPTARG		
		fi		
		;; 
	i) ellapsed=0
		;;
    \? ) echo "Invalid Option: -$OPTARG" 1>&2
      	exit 1
		;;
  esac
done
shift $((OPTIND -1))
students=""
while [ "$1" != "" ]; do
	std=`echo $1 | sed 's#/##'`
	students="$students $std"
	shift
done
if [ "$students" == "" ]; then
	students=`cat students.lst`
fi

function mkAllDirs() {
	students="$*"
	OK=1
	for d in $students; do
		d="$(echo -e "${d}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
		if [ "$d" == "" ];then
			continue
		fi
		if [ ! -d $d ]; then
			mkdir $d
			if [ ! -d $d ]; then
				echo "Cannot mkdir $d"
				OK=0
				break
			fi
		fi
	done

	if [ $OK == 0 ]; then
		exit 1
	fi
}

function delay(){
	if [[ $1 = 0 ]]; then
		return
	fi
	echo -n "Thinking"
	for x in `seq 1 $1` ; do
		echo -n "."	    
	    sleep 1   
	done ; echo
}


function remove_local_changes()
{
	git reset --hard
	git clean -fd
}

mkAllDirs $students

count=$(echo $students | wc -w)
curr=0

curdir=$PWD
part1=`dirname "$PWD"`
class=`basename "$PWD"`
proj=`basename "$part1"`
if [ $proj != 'web' ] && [ $proj != 'core' ]; then
	proj='work'
fi

for d in $students; do
	d="$(echo -e "${d}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
	if [ "$d" == "" ];then
		continue
	fi
	((curr++))
	if [ $curr -gt 1 ]; then
		delay $ellapsed
	fi	
	echo "${bold}------------------------------------- $d ($curr/$count)${normal}"
	cd $d
	if [ $action == 'clone' ] || [ ! -e $proj ]; then
		rm -rf $proj		
		git clone --depth=$depth git@$url:$class.$d/$proj.git
	else
		cd $proj
		remove_local_changes		
		git $action
		cd $curdir
	fi
done
